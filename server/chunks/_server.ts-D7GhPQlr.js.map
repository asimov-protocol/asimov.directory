{"version":3,"file":"_server.ts-D7GhPQlr.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/modules/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../chunks/index2.js\";\nconst GITHUB_API_BASE = \"https://api.github.com\";\nconst ORG_NAME = \"asimov-modules\";\nconst EXCLUDED_REPOS = [\".github\"];\nclass GitHubAPI {\n  token;\n  constructor(token) {\n    this.token = token;\n  }\n  getHeaders() {\n    const headers = {\n      Accept: \"application/vnd.github.v3+json\",\n      \"User-Agent\": \"asimov-directory\"\n    };\n    if (this.token) {\n      headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n    return headers;\n  }\n  shouldIncludeRepo(repo) {\n    if (EXCLUDED_REPOS.includes(repo.name)) {\n      return false;\n    }\n    if (repo.fork) {\n      return false;\n    }\n    if (repo.archived) {\n      return false;\n    }\n    if (repo.private) {\n      return false;\n    }\n    return true;\n  }\n  getGitHubSort(sortOption) {\n    switch (sortOption) {\n      case \"popular\":\n        return \"sort=stargazers&direction=desc\";\n      case \"newest\":\n        return \"sort=created&direction=desc\";\n      case \"updated\":\n        return \"sort=updated&direction=desc\";\n      case \"relevant\":\n      default:\n        return \"sort=updated&direction=desc\";\n    }\n  }\n  sortModulesClientSide(modules, sortOption) {\n    const sorted = [...modules];\n    switch (sortOption) {\n      case \"popular\":\n        return sorted.sort((a, b) => b.stargazers_count - a.stargazers_count);\n      case \"newest\":\n        return sorted.sort(\n          (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\n        );\n      case \"updated\":\n        return sorted.sort(\n          (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\n        );\n      case \"relevant\":\n        return sorted.sort((a, b) => {\n          const aScore = this.calculateRelevanceScore(a);\n          const bScore = this.calculateRelevanceScore(b);\n          return bScore - aScore;\n        });\n      default:\n        return sorted;\n    }\n  }\n  calculateRelevanceScore(module) {\n    const stars = module.stargazers_count || 0;\n    const hasDescription = module.description ? 1 : 0;\n    const hasTopics = module.topics.length > 0 ? 1 : 0;\n    const contributors = module.contributors_count || 0;\n    const daysSinceUpdate = (Date.now() - new Date(module.updated_at).getTime()) / (1e3 * 60 * 60 * 24);\n    const recencyScore = Math.max(0, 365 - daysSinceUpdate) / 365;\n    return stars * 2 + // Stars are important\n    contributors * 1.5 + // Contributors indicate activity\n    hasDescription * 10 + // Having description is important\n    hasTopics * 5 + // Topics help categorization\n    recencyScore * 20;\n  }\n  async fetchOrganizationRepos(sortOption = \"relevant\") {\n    try {\n      const sortParam = this.getGitHubSort(sortOption);\n      const response = await fetch(\n        `${GITHUB_API_BASE}/orgs/${ORG_NAME}/repos?${sortParam}&per_page=100`,\n        { headers: this.getHeaders() }\n      );\n      if (!response.ok) {\n        const rateLimit = response.headers.get(\"X-RateLimit-Remaining\");\n        const resetTime = response.headers.get(\"X-RateLimit-Reset\");\n        console.warn(\n          `GitHub API rate limit remaining: ${rateLimit}, resets at: ${resetTime ? new Date(parseInt(resetTime) * 1e3) : \"unknown\"}`\n        );\n        throw new Error(`GitHub API error: ${response.status} ${response.statusText}`);\n      }\n      const repos = await response.json();\n      const filteredRepos = repos.filter(this.shouldIncludeRepo);\n      const modulesWithContributors = await Promise.all(\n        filteredRepos.map(async (repo) => {\n          const contributorsCount = await this.getContributorsCount(repo.full_name);\n          return {\n            id: repo.id,\n            name: repo.name,\n            full_name: repo.full_name,\n            description: repo.description,\n            html_url: repo.html_url,\n            stargazers_count: repo.stargazers_count,\n            language: repo.language,\n            topics: repo.topics || [],\n            updated_at: repo.updated_at,\n            contributors_count: contributorsCount,\n            owner: {\n              login: repo.owner.login,\n              avatar_url: repo.owner.avatar_url\n            }\n          };\n        })\n      );\n      return this.sortModulesClientSide(modulesWithContributors, sortOption);\n    } catch (error) {\n      console.error(\"Error fetching GitHub repositories:\", error);\n      throw error;\n    }\n  }\n  async getContributorsCount(repoFullName) {\n    try {\n      const response = await fetch(\n        `${GITHUB_API_BASE}/repos/${repoFullName}/contributors?per_page=1`,\n        { headers: this.getHeaders() }\n      );\n      if (!response.ok) {\n        console.warn(`Failed to fetch contributors for ${repoFullName}: ${response.status}`);\n        return 0;\n      }\n      const linkHeader = response.headers.get(\"Link\");\n      if (linkHeader) {\n        const lastPageMatch = linkHeader.match(/page=(\\d+).*?rel=\"last\"/);\n        if (lastPageMatch) {\n          return parseInt(lastPageMatch[1], 10);\n        }\n      }\n      const contributors = await response.json();\n      return contributors.length;\n    } catch (error) {\n      console.warn(`Error fetching contributors for ${repoFullName}:`, error);\n      return 0;\n    }\n  }\n  // Method to check current rate limit status\n  async getRateLimit() {\n    try {\n      const response = await fetch(`${GITHUB_API_BASE}/rate_limit`, { headers: this.getHeaders() });\n      if (response.ok) {\n        return await response.json();\n      }\n    } catch (error) {\n      console.warn(\"Failed to get rate limit info:\", error);\n    }\n    return null;\n  }\n}\nconst GITHUB_TOKEN = \"ghs_itXj8KzMl0e2AIePLml4lAzulrqtTm0D3wUj\";\nconst githubApi = new GitHubAPI(GITHUB_TOKEN);\nasync function GET({ url }) {\n  try {\n    const sortParam = url.searchParams.get(\"sort\");\n    const sort = [\"relevant\", \"popular\", \"newest\", \"updated\"].includes(sortParam) ? sortParam : \"relevant\";\n    const rateLimit = await githubApi.getRateLimit();\n    if (rateLimit) {\n      console.log(\n        `GitHub API rate limit: ${rateLimit.resources.core.remaining}/${rateLimit.resources.core.limit}`\n      );\n    }\n    const modules = await githubApi.fetchOrganizationRepos(sort);\n    return json({\n      modules,\n      total: modules.length,\n      sort,\n      rateLimit: rateLimit?.resources.core\n    });\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    return json(\n      {\n        error: \"Failed to fetch modules\",\n        message: error instanceof Error ? error.message : \"Unknown error\"\n      },\n      { status: 500 }\n    );\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}